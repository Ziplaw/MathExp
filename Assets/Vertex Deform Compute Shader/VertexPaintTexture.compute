// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
float2 position;
RWTexture2D<float4> Result;

float map(float value, float min1, float max1, float min2, float max2) {
    return min2 + (value - min1) * (max2 - min2) / (max1 - min1);
}


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // Result[id.xy] = Result[id.xy].x < 1.0 ? 1-(length(position - id.xy) > 15 ? 1 : 0) : Result[id.xy].x;

    float brushSize = 50;
    
    float brush = max(Result[id.xy], 1-length(position - id.xy)/50);
    
    Result[id.xy] = length(position - id.xy) < 25 ? brush : Result[id.xy];
    Result[id.xy] = clamp(Result[id.xy] - float4(.005,.005,.005,.005),0,1);
}

